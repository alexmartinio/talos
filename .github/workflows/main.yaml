# Based on https://github.com/nberlee/talos/blob/release-1.7-turingrk1/.github/workflows/ci.yaml

name: Talos Image

on:
  push:
    branches: [ 'release-*' ]
    tags:
      - "v*"

env:
  ORIGIN_TAG: v1.7.1
  KERNEL_TAG: v1.7.1

jobs:
  talos-build:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: write
      issues: read
      packages: write
      pull-requests: read

    steps:
      - uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: siderolabs/talos
          ref: ${{ env.ORIGIN_TAG }}
          # need history for `git describe` to work for Talos `Makefile`
          fetch-depth: 0
          fetch-tags: true

      - name: Set Environment Variable
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "PUBLISH_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          else
            echo "PUBLISH_TAG=${GITHUB_SHA}" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Build and push Talos installer image
        run: make installer
        env:
          PUSH: '1'
          TAG: ${{ env.PUBLISH_TAG }}
          TAG_SUFFIX: "-nosbclayer"
          PKG_KERNEL: ghcr.io/alexmartinio/talos-pkgs:kernel-${{ env.KERNEL_TAG }}
          USERNAME: ${{ github.actor }}
          PLATFORM: linux/arm64
          PROGRESS: plain
          CI_ARGS: "--cache-from=ghcr.io/siderolabs/installer:cache --cache-to=ghcr.io/siderolabs/installer:cache"

      - name: Build and push Talos imager image
        run: make imager
        env:
          PUSH: '1'
          TAG: ${{ env.PUBLISH_TAG }}
          PKG_KERNEL: ghcr.io/alexmartinio/talos-pkgs:kernel-${{ env.KERNEL_TAG }}
          USERNAME: ${{ github.actor }}
          PLATFORM: linux/arm64,linux/amd64
          INSTALLER_ARCH: arm64
          PROGRESS: plain
          CI_ARGS: "--cache-from=ghcr.io/siderolabs/imager:cache --cache-to=ghcr.io/siderolabs/imager:cache"

      # - name: release-notes
      #   if: startsWith(github.ref, 'refs/tags/')
      #   run: |
      #     mkdir -p _out
      #     # Hack for ARM64 release tool
      #     mv hack/release.sh hack/release.sh.old
      #     curl -sL "https://raw.githubusercontent.com/alexmartinio/talos/release-1.7-turingrk1/hack/release.sh" -o hack/release.sh
      #     chmod +x hack/release.sh
      #     export TAG=${GITHUB_REF#refs/tags/}
          
      #     make release-notes
      #     mv hack/release.sh.old hack/release.sh
          
      - name: Build a CM4 flashable image
        run: make image-metal
        env:
          USERNAME: ${{ github.actor }}
          PLATFORM: linux/arm64
          PROGRESS: plain
          IMAGER_ARGS: |
            --base-installer-image ghcr.io/siderolabs/installer:${{ env.PUBLISH_TAG }}-nosbclayer \
            --overlay-name rpi_generic --overlay-image ghcr.io/siderolabs/sbc-raspberrypi:v0.1.0-beta.0 \
            --system-extension-image ghcr.io/siderolabs/iscsi-tools:v0.1.4 \
            --system-extension-image ghcr.io/siderolabs/util-linux-tools:2.39.3

      - name: Build a CM4 installer
        run: |
          make image-installer
          curl -sL "https://github.com/google/go-containerregistry/releases/download/v0.19.1/go-containerregistry_Linux_arm64.tar.gz" | tar -zxv -C /usr/local/bin/ crane
          crane push _out/installer-arm64.tar ghcr.io/alexmartinio/installer:${{ env.PUBLISH_TAG }}-cm4
        env:
          USERNAME: ${{ github.actor }}
          PLATFORM: linux/arm64
          PROGRESS: plain
          IMAGER_ARGS: "--base-installer-image ghcr.io/alexmartinio/installer:${{ env.PUBLISH_TAG }}-nosbclayer --system-extension-image ghcr.io/alexmartinio/rk3588:${{ env.RK3588_TAG }} --overlay-image ghcr.io/alexmartinio/sbc-turingrk1:${{ env.SBC_TAG }} --overlay-name=cm4"

      - uses: actions/upload-artifact@v3
        with:
          name: image-cm4
          path: _out/*.raw.xz
          if-no-files-found: error

      - name: Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: crazy-max/ghaction-github-release@v2
        with:
          body_path: _out/RELEASE_NOTES.md
          draft: "true"
          files: |
            _out/metal-cm4-arm64.raw.xz